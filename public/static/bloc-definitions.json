{
  "input": {
    "HBaseInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.hbase.HBaseInput",
      "config": {
        "table": ""
      },
      "group": "hbase",
      "description": "Scans an hbase table",
      "details": {
        "table": {
          "description": "hbase table name",
          "type": "string"
        }
      }
    },
    "HiveInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.hive.HiveInput",
      "config": {
        "sql": ""
      },
      "group": "hive",
      "description": "Reads data from a hive source based on a sql expression",
      "details": {
        "sql": {
          "description": "sql expression",
          "type": "sql"
        }
      }
    },
    "KafkaInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.kafka.KafkaInput",
      "config": {
        "topic": "",
        "broker": "",
        "reset": ""
      },
      "group": "kafka",
      "description": "Polls data from an unsecured kafka source",
      "details": {
        "topic": {
          "description": "kafka topic name",
          "type": "string"
        },
        "broker": {
          "description": "kafka brokers list",
          "type": "string"
        },
        "reset": {
          "description": "read topic from the beginning",
          "type": "boolean"
        }
      }
    },
    "SecuredKafkaInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.kafka.SecuredKafkaInput",
      "config": {
        "topic": "",
        "broker": "",
        "reset": ""
      },
      "group": "kafka",
      "description": "Polls data from an secured kafka source",
      "details": {
        "topic": {
          "description": "kafka topic name",
          "type": "string"
        },
        "broker": {
          "description": "kafka brokers list",
          "type": "string"
        },
        "reset": {
          "description": "read topic from the beginning",
          "type": "boolean"
        }
      }
    },
    "CsvInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.files.Csv",
      "config": {
        "file": ""
      },
      "group": "csv",
      "description": "Reads data from a csv input",
      "details": {
        "file": {
          "description": "file path",
          "type": "path"
        }
      }
    },
    "XmlInput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.input.files.XmlInput",
      "config": {
        "XmlInputFolder": ""
      },
      "group": "xml",
      "description": "Reads data from a xml input folder",
      "details": {
        "file": {
          "description": "directory path",
          "type": "path"
        }
      }
    }
  },
  "middleware": {
    "BulkGet": {
      "class": "fr.edf.dco.edma.ece.sparktimus.middleware.hbase.BulkGet",
      "config": {
        "table": "",
        "field": ""
      },
      "group": "hbase",
      "description": "Gets data from an hbase source based on a field value",
      "details": {
        "table": {
          "description": "hbase table name",
          "type": "string"
        },
        "field": {
          "description": "xpath to field value [hbase row_id]",
          "type": "xpath"
        }
      }
    },
    "HBaseGet": {
      "class": "fr.edf.dco.edma.ece.sparktimus.middleware.hbase.HBaseGet",
      "config": {
        "table": "",
        "field": "",
        "target": ""
      },
      "group": "hbase",
      "description":
        "Gets data from an hbase source based on a field value and puts the result in the target attribute",
      "details": {
        "table": {
          "description": "hbase table name",
          "type": "string"
        },
        "field": {
          "description": "xpath to field value [hbase row_id]",
          "type": "xpath"
        },
        "target": {
          "description": "hbase result attribute holder",
          "type": "string"
        }
      }
    },
    "MapperTransformer": {
      "class":
        "fr.edf.dco.edma.ece.sparktimus.middleware.mapper.MapperTransformer",
      "config": {
        "mapper": ""
      },
      "editables": {
        "mapper": {
          "value": "{}",
          "language": "json"
        }
      },
      "group": "mapper",
      "description": "transforms the source based on a json document",
      "details": {
        "mapper": {
          "description": "mapper json document",
          "type": "json"
        }
      }
    },
    "FlattenTransformer": {
      "class":
        "fr.edf.dco.edma.ece.sparktimus.middleware.flatten.FlattenTransformer",
      "config": {
        "flat": ""
      },
      "group": "flatten"
    },
    "FilterXPath": {
      "class": "fr.edf.dco.edma.ece.sparktimus.middleware.filter.FilterXPath",
      "config": {
        "filter": ""
      },
      "group": "filter"
    },
    "HBaseFlattenLink": {
      "class":
        "fr.edf.dco.edma.ece.sparktimus.middleware.flatten.HBaseFlattenLink",
      "config": {
        "source": "",
        "target": "",
        "prefix": ""
      },
      "group": "flatten"
    },
    "HBaseScanRange": {
      "class": "fr.edf.dco.edma.ece.sparktimus.middleware.hbase.HBaseScanRange",
      "config": {
        "table": "",
        "range_in": "",
        "range_out": "",
        "target": ""
      },
      "group": "hbase"
    },
    "NullIfEmpty": {
      "class": "fr.edf.dco.edma.ece.sparktimus.middleware.mapper.NullIfEmpty",
      "group": "null"
    }
  },
  "output": {
    "HBaseOutput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.hbase.HBaseOutput",
      "config": {
        "table": ""
      },
      "group": "hbase"
    },
    "HBaseDeleteOutput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.hbase.HBaseDeleteOutput",
      "config": {
        "table": ""
      },
      "group": "hbase"
    },
    "ElasticsearchOutput": {
      "class":
        "fr.edf.dco.edma.ece.sparktimus.output.elasticsearch.ElasticsearchOutput",
      "config": {
        "index": "",
        "hostname": "",
        "port": ""
      },
      "group": "es"
    },
    "SecuredElasticsearchOutput": {
      "class":
        "fr.edf.dco.edma.ece.sparktimus.output.elasticsearch.SecuredElasticsearchOutput",
      "config": {
        "index": "",
        "hostname": "",
        "port": "",
        "user": "",
        "password": "",
        "salt_file": ""
      },
      "group": "es"
    },
    "KafkaOutput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.kafka.KafkaOutput",
      "config": {
        "topic": "",
        "broker": ""
      },
      "group": "kafka"
    },
    "SecuredKafkaOuput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.kafka.SecuredKafkaOuput",
      "config": {
        "topic": "",
        "broker": ""
      },
      "group": "kafka"
    },
    "OrientDBOutput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.graph.OrientDB",
      "config": {
        "uri": "",
        "user": "",
        "password": ""
      },
      "group": "orientdb"
    },
    "LogOutput": {
      "class": "fr.edf.dco.edma.ece.sparktimus.output.log.LogOutput",
      "group": "log"
    }
  }
}
